"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Query {
  causeway_applib_UserMenu: causeway_applib_UserMenu
  causeway_conf_ConfigurationMenu: causeway_conf_ConfigurationMenu
  causeway_security_LogoutMenu: causeway_security_LogoutMenu
  numServices: Int
  university_dept_DepartmentMenu: university_dept_DepartmentMenu
  university_dept_DeptHeadMenu: university_dept_DeptHeadMenu
}

type causeway_applib_DomainObjectList {
  _gql_meta: causeway_applib_DomainObjectList__meta
  actionArguments: String
  actionId: String
  actionOwningFqcn: String
  elementTypeFqcn: String!
  title: String!
}

type causeway_applib_DomainObjectList__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_FacetGroupNode {
  _gql_meta: causeway_applib_FacetGroupNode__meta
  facets: String!
}

type causeway_applib_FacetGroupNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_ParameterNode {
  _gql_meta: causeway_applib_ParameterNode__meta
  parameter: String!
  parentNode: causeway_applib_node_ActionNode!
}

type causeway_applib_ParameterNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_PropertyNode {
  _gql_meta: causeway_applib_PropertyNode__meta
  _gql_mutations: causeway_applib_PropertyNode__mutations
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
  property: String!
}

type causeway_applib_PropertyNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_PropertyNode__mutations {
  streamChildNodes: java_util_stream_Stream
}

type causeway_applib_RoleMemento {
  _gql_meta: causeway_applib_RoleMemento__meta
  description: String!
  name: String!
}

type causeway_applib_RoleMemento__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_TypeNode {
  _gql_meta: causeway_applib_TypeNode__meta
  domainClassDto: causeway_schema_metamodel_v2_DomainClassDto!
}

type causeway_applib_TypeNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_UserMemento {
  _gql_meta: causeway_applib_UserMemento__meta
  authenticationCode: String!
  authenticationSource: String!
  avatarUrl: String
  impersonating: String!
  languageLocale: String
  multiTenancyToken: String
  name: String!
  numberFormatLocale: String
  realName: String
  roles: [causeway_applib_RoleMemento]
  timeFormatLocale: String
}

type causeway_applib_UserMemento__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_UserMenu {
  me: causeway_applib_UserMemento
}

type causeway_applib_node_ActionNode {
  _gql_meta: causeway_applib_node_ActionNode__meta
  _gql_mutations: causeway_applib_node_ActionNode__mutations
  action: String!
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
}

type causeway_applib_node_ActionNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_node_ActionNode__mutations {
  streamChildNodes: java_util_stream_Stream
}

type causeway_applib_node_CollectionNode {
  _gql_meta: causeway_applib_node_CollectionNode__meta
  _gql_mutations: causeway_applib_node_CollectionNode__mutations
  collection: String!
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
}

type causeway_applib_node_CollectionNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_node_CollectionNode__mutations {
  streamChildNodes: java_util_stream_Stream
}

type causeway_applib_node_FacetAttrNode {
  _gql_meta: causeway_applib_node_FacetAttrNode__meta
  facetAttr: String!
  parentNode: causeway_applib_node_FacetNode!
}

type causeway_applib_node_FacetAttrNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_node_FacetNode {
  _gql_meta: causeway_applib_node_FacetNode__meta
  facet: String!
  shadowed: String!
}

type causeway_applib_node_FacetNode__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_conf_ConfigurationMenu {
  configuration: causeway_conf_ConfigurationViewmodel
}

type causeway_conf_ConfigurationProperty {
  _gql_meta: causeway_conf_ConfigurationProperty__meta
  key: String!
  value: String!
}

type causeway_conf_ConfigurationProperty__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_conf_ConfigurationViewmodel {
  _gql_meta: causeway_conf_ConfigurationViewmodel__meta
  environment: [causeway_conf_ConfigurationProperty]
  primary: [causeway_conf_ConfigurationProperty]
  secondary: [causeway_conf_ConfigurationProperty]
}

type causeway_conf_ConfigurationViewmodel__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationFeatureViewModel {
  _gql_meta: causeway_feat_ApplicationFeatureViewModel__meta
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationFeatureViewModel__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationNamespace {
  _gql_meta: causeway_feat_ApplicationNamespace__meta
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationNamespace__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationType {
  _gql_meta: causeway_feat_ApplicationType__meta
  actions: [causeway_feat_ApplicationTypeAction]
  collections: [causeway_feat_ApplicationTypeCollection]
  memberName: String!
  namespaceName: String!
  properties: [causeway_feat_ApplicationTypeProperty]
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeAction {
  _gql_meta: causeway_feat_ApplicationTypeAction__meta
  actionSemantics: String!
  memberName: String!
  namespaceName: String!
  returnType: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeAction__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationTypeCollection {
  _gql_meta: causeway_feat_ApplicationTypeCollection__meta
  derived: String!
  elementType: String!
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeCollection__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationTypeMember {
  _gql_meta: causeway_feat_ApplicationTypeMember__meta
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeMember__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationTypeProperty {
  _gql_meta: causeway_feat_ApplicationTypeProperty__meta
  derived: String!
  maxLength: String
  memberName: String!
  namespaceName: String!
  returnType: String!
  typeSimpleName: String!
  typicalLength: String
}

type causeway_feat_ApplicationTypeProperty__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationType__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_schema_metamodel_v2_DomainClassDto {
  _gql_meta: causeway_schema_metamodel_v2_DomainClassDto__meta
  actions: String!
  annotations: String!
  collections: String!
  facets: String!
  id: String!
  majorVersion: String
  minorVersion: String
  properties: String!
  service: String!
}

type causeway_schema_metamodel_v2_DomainClassDto__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_security_LoginRedirect {
  _gql_meta: causeway_security_LoginRedirect__meta
}

type causeway_security_LoginRedirect__meta {
  id: String!
  logicalTypeName: String!
}

type causeway_security_LogoutMenu {
  logout: String
}

type causeway_testing_fixtures_FixtureResult {
  _gql_meta: causeway_testing_fixtures_FixtureResult__meta
  className: String!
  fixtureScriptClassName: String
  key: String!
}

type causeway_testing_fixtures_FixtureResult__meta {
  id: String!
  logicalTypeName: String!
}

type java_lang_Runnable {
  _gql_meta: java_lang_Runnable__meta
}

type java_lang_Runnable__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_Map {
  _gql_meta: java_util_Map__meta
}

type java_util_Map__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_SortedMap {
  _gql_meta: java_util_SortedMap__meta
}

type java_util_SortedMap__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_concurrent_Callable {
  _gql_meta: java_util_concurrent_Callable__meta
}

type java_util_concurrent_Callable__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_function_BiFunction {
  _gql_meta: java_util_function_BiFunction__meta
}

type java_util_function_BiFunction__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_function_Consumer {
  _gql_meta: java_util_function_Consumer__meta
}

type java_util_function_Consumer__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_function_Function {
  _gql_meta: java_util_function_Function__meta
}

type java_util_function_Function__meta {
  id: String!
  logicalTypeName: String!
}

type java_util_stream_Stream {
  _gql_meta: java_util_stream_Stream__meta
}

type java_util_stream_Stream__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Either {
  _gql_meta: org_apache_causeway_commons_functional_Either__meta
  _gql_mutations: org_apache_causeway_commons_functional_Either__mutations
  left: String!
  right: String!
}

type org_apache_causeway_commons_functional_Either__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Either__mutations {
  accept(leftConsumer: java_util_function_Consumer__input!, rightConsumer: java_util_function_Consumer__input!): String
  left: String
  map(leftMapper: java_util_function_Function__input!, rightMapper: java_util_function_Function__input!): org_apache_causeway_commons_functional_Either
  mapLeft(leftMapper: java_util_function_Function__input!): org_apache_causeway_commons_functional_Either
  mapRight(rightMapper: java_util_function_Function__input!): org_apache_causeway_commons_functional_Either
  right: String
}

type org_apache_causeway_commons_functional_Railway {
  _gql_meta: org_apache_causeway_commons_functional_Railway__meta
  _gql_mutations: org_apache_causeway_commons_functional_Railway__mutations
  failure: String!
  success: String!
}

type org_apache_causeway_commons_functional_Railway__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Railway__mutations {
  chain(chainingFunction: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Railway
  ifFailure(failureConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!): org_apache_causeway_commons_functional_Railway
  ifSuccess(successConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!): org_apache_causeway_commons_functional_Railway
  mapFailure(failureMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Railway
  mapSuccess(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Railway
}

type org_apache_causeway_commons_functional_ThrowingConsumer {
  _gql_meta: org_apache_causeway_commons_functional_ThrowingConsumer__meta
  _gql_mutations: org_apache_causeway_commons_functional_ThrowingConsumer__mutations
}

type org_apache_causeway_commons_functional_ThrowingConsumer__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_ThrowingConsumer__mutations {
  andThen(arg0: java_util_function_Consumer__input!): java_util_function_Consumer
  throwing(exceptionWrapper: java_util_function_BiFunction__input!): org_apache_causeway_commons_functional_ThrowingConsumer
}

type org_apache_causeway_commons_functional_ThrowingFunction {
  _gql_meta: org_apache_causeway_commons_functional_ThrowingFunction__meta
  _gql_mutations: org_apache_causeway_commons_functional_ThrowingFunction__mutations
}

type org_apache_causeway_commons_functional_ThrowingFunction__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_ThrowingFunction__mutations {
  andThen(arg0: java_util_function_Function__input!): java_util_function_Function
  compose(arg0: java_util_function_Function__input!): java_util_function_Function
  throwing(exceptionWrapper: java_util_function_BiFunction__input!): org_apache_causeway_commons_functional_ThrowingFunction
}

type org_apache_causeway_commons_functional_ThrowingRunnable {
  _gql_meta: org_apache_causeway_commons_functional_ThrowingRunnable__meta
  _gql_mutations: org_apache_causeway_commons_functional_ThrowingRunnable__mutations
}

type org_apache_causeway_commons_functional_ThrowingRunnable__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_ThrowingRunnable__mutations {
  callUncatched: String
  run: String
  runUncatched: String
  toCallable: java_util_concurrent_Callable
  toRunnable: java_lang_Runnable
}

type org_apache_causeway_commons_functional_Try {
  _gql_meta: org_apache_causeway_commons_functional_Try__meta
  _gql_mutations: org_apache_causeway_commons_functional_Try__mutations
  failure: String!
  success: String!
}

type org_apache_causeway_commons_functional_Try__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Try__mutations {
  accept(failureConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!, successConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!): org_apache_causeway_commons_functional_Try
  flatMapSuccess(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  flatMapSuccessAsNullable(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  flatMapSuccessWhenPresent(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  ifAbsentFail: org_apache_causeway_commons_functional_Try
  ifFailure(exceptionConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!): org_apache_causeway_commons_functional_Try
  ifFailureFail: org_apache_causeway_commons_functional_Try
  ifSuccess(valueConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!): org_apache_causeway_commons_functional_Try
  ifSuccessAsNullable(valueConsumer: org_apache_causeway_commons_functional_ThrowingConsumer__input!): org_apache_causeway_commons_functional_Try
  mapEmptyToFailure: org_apache_causeway_commons_functional_Try
  mapFailure(failureMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  mapFailureToSuccess(recoveryMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  mapSuccess(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  mapSuccessAsNullable(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  mapSuccessWhenPresent(successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Try
  mapToEither(failureMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!, successMapper: org_apache_causeway_commons_functional_ThrowingFunction__input!): org_apache_causeway_commons_functional_Either
  orCall(fallback: java_util_concurrent_Callable__input!): org_apache_causeway_commons_functional_Try
  then(next: java_util_concurrent_Callable__input!): org_apache_causeway_commons_functional_Try
  thenCall(callable: java_util_concurrent_Callable__input!): org_apache_causeway_commons_functional_Try
  thenRun(runnable: org_apache_causeway_commons_functional_ThrowingRunnable__input!): org_apache_causeway_commons_functional_Try
}

type org_apache_causeway_core_metamodel_inspect_model_MMNode {
  _gql_meta: org_apache_causeway_core_metamodel_inspect_model_MMNode__meta
}

type org_apache_causeway_core_metamodel_inspect_model_MMNode__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_core_metamodel_inspect_model_MemberNode {
  _gql_meta: org_apache_causeway_core_metamodel_inspect_model_MemberNode__meta
  _gql_mutations: org_apache_causeway_core_metamodel_inspect_model_MemberNode__mutations
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
}

type org_apache_causeway_core_metamodel_inspect_model_MemberNode__meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_core_metamodel_inspect_model_MemberNode__mutations {
  streamChildNodes: java_util_stream_Stream
}

type org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript {
  _gql_meta: org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript__meta
  friendlyName: String!
  qualifiedName: String!
}

type org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript__meta {
  id: String!
  logicalTypeName: String!
}

type university_dept_Department {
  _gql_meta: university_dept_Department__meta
  deptHead: university_dept_DeptHead
  name: String!
}

type university_dept_DepartmentMenu {
  createDepartment(deptHead: university_dept_DeptHead__input, name: String!): university_dept_Department
  findAllDepartments: [university_dept_Department]
}

type university_dept_Department__meta {
  id: String!
  logicalTypeName: String!
  version: String
}

type university_dept_DeptHead {
  _gql_meta: university_dept_DeptHead__meta
  _gql_mutations: university_dept_DeptHead__mutations
  department: university_dept_Department
  name: String
}

type university_dept_DeptHeadMenu {
  findAllDeptHeads: [university_dept_DeptHead]
  findDeptHeadByName(name: String!): university_dept_DeptHead
}

type university_dept_DeptHead__meta {
  id: String!
  logicalTypeName: String!
  version: String
}

type university_dept_DeptHead__mutations {
  changeDepartment(department: university_dept_Department__input!): university_dept_DeptHead
  changeName(newName: String!): university_dept_DeptHead
}

input causeway_applib_DomainObjectList__input {
  id: ID!
}

input causeway_applib_FacetGroupNode__input {
  id: ID!
}

input causeway_applib_ParameterNode__input {
  id: ID!
}

input causeway_applib_PropertyNode__input {
  id: ID!
}

input causeway_applib_RoleMemento__input {
  id: ID!
}

input causeway_applib_TypeNode__input {
  id: ID!
}

input causeway_applib_UserMemento__input {
  id: ID!
}

input causeway_applib_node_ActionNode__input {
  id: ID!
}

input causeway_applib_node_CollectionNode__input {
  id: ID!
}

input causeway_applib_node_FacetAttrNode__input {
  id: ID!
}

input causeway_applib_node_FacetNode__input {
  id: ID!
}

input causeway_conf_ConfigurationProperty__input {
  id: ID!
}

input causeway_conf_ConfigurationViewmodel__input {
  id: ID!
}

input causeway_feat_ApplicationFeatureViewModel__input {
  id: ID!
}

input causeway_feat_ApplicationNamespace__input {
  id: ID!
}

input causeway_feat_ApplicationTypeAction__input {
  id: ID!
}

input causeway_feat_ApplicationTypeCollection__input {
  id: ID!
}

input causeway_feat_ApplicationTypeMember__input {
  id: ID!
}

input causeway_feat_ApplicationTypeProperty__input {
  id: ID!
}

input causeway_feat_ApplicationType__input {
  id: ID!
}

input causeway_schema_metamodel_v2_DomainClassDto__input {
  id: ID!
}

input causeway_security_LoginRedirect__input {
  id: ID!
}

input causeway_testing_fixtures_FixtureResult__input {
  id: ID!
}

input java_lang_Runnable__input {
  id: ID!
}

input java_util_Map__input {
  id: ID!
}

input java_util_SortedMap__input {
  id: ID!
}

input java_util_concurrent_Callable__input {
  id: ID!
}

input java_util_function_BiFunction__input {
  id: ID!
}

input java_util_function_Consumer__input {
  id: ID!
}

input java_util_function_Function__input {
  id: ID!
}

input java_util_stream_Stream__input {
  id: ID!
}

input org_apache_causeway_commons_functional_Either__input {
  id: ID!
}

input org_apache_causeway_commons_functional_Railway__input {
  id: ID!
}

input org_apache_causeway_commons_functional_ThrowingConsumer__input {
  id: ID!
}

input org_apache_causeway_commons_functional_ThrowingFunction__input {
  id: ID!
}

input org_apache_causeway_commons_functional_ThrowingRunnable__input {
  id: ID!
}

input org_apache_causeway_commons_functional_Try__input {
  id: ID!
}

input org_apache_causeway_core_metamodel_inspect_model_MMNode__input {
  id: ID!
}

input org_apache_causeway_core_metamodel_inspect_model_MemberNode__input {
  id: ID!
}

input org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript__input {
  id: ID!
}

input university_dept_Department__input {
  id: ID!
}

input university_dept_DeptHead__input {
  id: ID!
}
