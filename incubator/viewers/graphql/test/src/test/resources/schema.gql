"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Query {
  causeway_applib_UserMenu: causeway_applib_UserMenu
  causeway_conf_ConfigurationMenu: causeway_conf_ConfigurationMenu
  causeway_security_LogoutMenu: causeway_security_LogoutMenu
  gql_test_domain_TopLevelMenu: gql_test_domain_TopLevelMenu
  numServices: Int
}

type causeway_applib_DomainObjectList {
  _gql_meta: causeway_applib_DomainObjectList__DomainObject_meta
  actionArguments: String
  actionId: String
  actionOwningFqcn: String
  elementTypeFqcn: String!
  title: String!
}

type causeway_applib_DomainObjectList__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_FacetGroupNode {
  _gql_meta: causeway_applib_FacetGroupNode__DomainObject_meta
  facets: String!
}

type causeway_applib_FacetGroupNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_ParameterNode {
  _gql_meta: causeway_applib_ParameterNode__DomainObject_meta
  parameter: String!
  parentNode: causeway_applib_node_ActionNode!
}

type causeway_applib_ParameterNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_PropertyNode {
  _gql_meta: causeway_applib_PropertyNode__DomainObject_meta
  _gql_mutations: causeway_applib_PropertyNode__DomainObject_mutators
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
  property: String!
}

type causeway_applib_PropertyNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_PropertyNode__DomainObject_mutators {
  streamChildNodes: java_util_stream_Stream
}

type causeway_applib_RoleMemento {
  _gql_meta: causeway_applib_RoleMemento__DomainObject_meta
  description: String!
  name: String!
}

type causeway_applib_RoleMemento__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_TypeNode {
  _gql_meta: causeway_applib_TypeNode__DomainObject_meta
  domainClassDto: causeway_schema_metamodel_v2_DomainClassDto!
}

type causeway_applib_TypeNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_UserMemento {
  _gql_meta: causeway_applib_UserMemento__DomainObject_meta
  authenticationCode: String!
  authenticationSource: String!
  avatarUrl: String
  impersonating: String!
  languageLocale: String
  multiTenancyToken: String
  name: String!
  numberFormatLocale: String
  realName: String
  roles: [causeway_applib_RoleMemento]
  timeFormatLocale: String
}

type causeway_applib_UserMemento__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_UserMenu {
  me: causeway_applib_UserMemento
}

type causeway_applib_node_ActionNode {
  _gql_meta: causeway_applib_node_ActionNode__DomainObject_meta
  _gql_mutations: causeway_applib_node_ActionNode__DomainObject_mutators
  action: String!
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
}

type causeway_applib_node_ActionNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_node_ActionNode__DomainObject_mutators {
  streamChildNodes: java_util_stream_Stream
}

type causeway_applib_node_CollectionNode {
  _gql_meta: causeway_applib_node_CollectionNode__DomainObject_meta
  _gql_mutations: causeway_applib_node_CollectionNode__DomainObject_mutators
  collection: String!
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
}

type causeway_applib_node_CollectionNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_node_CollectionNode__DomainObject_mutators {
  streamChildNodes: java_util_stream_Stream
}

type causeway_applib_node_FacetAttrNode {
  _gql_meta: causeway_applib_node_FacetAttrNode__DomainObject_meta
  facetAttr: String!
  parentNode: causeway_applib_node_FacetNode!
}

type causeway_applib_node_FacetAttrNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_applib_node_FacetNode {
  _gql_meta: causeway_applib_node_FacetNode__DomainObject_meta
  facet: String!
  shadowed: String!
}

type causeway_applib_node_FacetNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_conf_ConfigurationMenu {
  configuration: causeway_conf_ConfigurationViewmodel
}

type causeway_conf_ConfigurationProperty {
  _gql_meta: causeway_conf_ConfigurationProperty__DomainObject_meta
  key: String!
  value: String!
}

type causeway_conf_ConfigurationProperty__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_conf_ConfigurationViewmodel {
  _gql_meta: causeway_conf_ConfigurationViewmodel__DomainObject_meta
  environment: [causeway_conf_ConfigurationProperty]
  primary: [causeway_conf_ConfigurationProperty]
  secondary: [causeway_conf_ConfigurationProperty]
}

type causeway_conf_ConfigurationViewmodel__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationFeatureViewModel {
  _gql_meta: causeway_feat_ApplicationFeatureViewModel__DomainObject_meta
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationFeatureViewModel__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationNamespace {
  _gql_meta: causeway_feat_ApplicationNamespace__DomainObject_meta
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationNamespace__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationType {
  _gql_meta: causeway_feat_ApplicationType__DomainObject_meta
  actions: [causeway_feat_ApplicationTypeAction]
  collections: [causeway_feat_ApplicationTypeCollection]
  memberName: String!
  namespaceName: String!
  properties: [causeway_feat_ApplicationTypeProperty]
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeAction {
  _gql_meta: causeway_feat_ApplicationTypeAction__DomainObject_meta
  actionSemantics: String!
  memberName: String!
  namespaceName: String!
  returnType: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeAction__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationTypeCollection {
  _gql_meta: causeway_feat_ApplicationTypeCollection__DomainObject_meta
  derived: String!
  elementType: String!
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeCollection__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationTypeMember {
  _gql_meta: causeway_feat_ApplicationTypeMember__DomainObject_meta
  memberName: String!
  namespaceName: String!
  typeSimpleName: String!
}

type causeway_feat_ApplicationTypeMember__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationTypeProperty {
  _gql_meta: causeway_feat_ApplicationTypeProperty__DomainObject_meta
  derived: String!
  maxLength: String
  memberName: String!
  namespaceName: String!
  returnType: String!
  typeSimpleName: String!
  typicalLength: String
}

type causeway_feat_ApplicationTypeProperty__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_feat_ApplicationType__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_schema_metamodel_v2_DomainClassDto {
  _gql_meta: causeway_schema_metamodel_v2_DomainClassDto__DomainObject_meta
  actions: String!
  annotations: String!
  collections: String!
  facets: String!
  id: String!
  majorVersion: String
  minorVersion: String
  properties: String!
  service: String!
}

type causeway_schema_metamodel_v2_DomainClassDto__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_security_LoginRedirect {
  _gql_meta: causeway_security_LoginRedirect__DomainObject_meta
}

type causeway_security_LoginRedirect__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type causeway_security_LogoutMenu {
  logout: String
}

type causeway_testing_fixtures_FixtureResult {
  _gql_meta: causeway_testing_fixtures_FixtureResult__DomainObject_meta
  className: String!
  fixtureScriptClassName: String
  key: String!
}

type causeway_testing_fixtures_FixtureResult__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type gql_test_domain_Department {
  _gql_meta: gql_test_domain_Department__DomainObject_meta
  deptHead: gql_test_domain_DeptHead
  name: String!
}

type gql_test_domain_Department__DomainObject_meta {
  id: String!
  logicalTypeName: String!
  version: String
}

type gql_test_domain_DeptHead {
  _gql_meta: gql_test_domain_DeptHead__DomainObject_meta
  _gql_mutations: gql_test_domain_DeptHead__DomainObject_mutators
  department: gql_test_domain_Department
  name: String
}

type gql_test_domain_DeptHead__DomainObject_meta {
  id: String!
  logicalTypeName: String!
  version: String
}

type gql_test_domain_DeptHead__DomainObject_mutators {
  changeDeptHead(department: _gql_input__gql_test_domain_Department!): gql_test_domain_DeptHead
  changeName(newName: String!): gql_test_domain_DeptHead
}

type gql_test_domain_TopLevelMenu {
  createDepartment(deptHead: _gql_input__gql_test_domain_DeptHead, name: String): gql_test_domain_Department
  findAllDepartments: [gql_test_domain_Department]
  findAllDeptHeads: [gql_test_domain_DeptHead]
  findAllEntitiesWithName: [org_apache_causeway_viewer_graphql_viewer_test_domain_WithName]
  findDeptHeadByName(name: String): gql_test_domain_DeptHead
}

type java_lang_Runnable {
  _gql_meta: java_lang_Runnable__DomainObject_meta
}

type java_lang_Runnable__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_Map {
  _gql_meta: java_util_Map__DomainObject_meta
}

type java_util_Map__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_SortedMap {
  _gql_meta: java_util_SortedMap__DomainObject_meta
}

type java_util_SortedMap__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_concurrent_Callable {
  _gql_meta: java_util_concurrent_Callable__DomainObject_meta
}

type java_util_concurrent_Callable__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_function_BiFunction {
  _gql_meta: java_util_function_BiFunction__DomainObject_meta
}

type java_util_function_BiFunction__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_function_Consumer {
  _gql_meta: java_util_function_Consumer__DomainObject_meta
}

type java_util_function_Consumer__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_function_Function {
  _gql_meta: java_util_function_Function__DomainObject_meta
}

type java_util_function_Function__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type java_util_stream_Stream {
  _gql_meta: java_util_stream_Stream__DomainObject_meta
}

type java_util_stream_Stream__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Either {
  _gql_meta: org_apache_causeway_commons_functional_Either__DomainObject_meta
  _gql_mutations: org_apache_causeway_commons_functional_Either__DomainObject_mutators
  left: String!
  right: String!
}

type org_apache_causeway_commons_functional_Either__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Either__DomainObject_mutators {
  accept(leftConsumer: _gql_input__java_util_function_Consumer!, rightConsumer: _gql_input__java_util_function_Consumer!): String
  left: String
  map(leftMapper: _gql_input__java_util_function_Function!, rightMapper: _gql_input__java_util_function_Function!): org_apache_causeway_commons_functional_Either
  mapLeft(leftMapper: _gql_input__java_util_function_Function!): org_apache_causeway_commons_functional_Either
  mapRight(rightMapper: _gql_input__java_util_function_Function!): org_apache_causeway_commons_functional_Either
  right: String
}

type org_apache_causeway_commons_functional_Railway {
  _gql_meta: org_apache_causeway_commons_functional_Railway__DomainObject_meta
  _gql_mutations: org_apache_causeway_commons_functional_Railway__DomainObject_mutators
  failure: String!
  success: String!
}

type org_apache_causeway_commons_functional_Railway__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Railway__DomainObject_mutators {
  chain(chainingFunction: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Railway
  ifFailure(failureConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!): org_apache_causeway_commons_functional_Railway
  ifSuccess(successConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!): org_apache_causeway_commons_functional_Railway
  mapFailure(failureMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Railway
  mapSuccess(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Railway
}

type org_apache_causeway_commons_functional_ThrowingConsumer {
  _gql_meta: org_apache_causeway_commons_functional_ThrowingConsumer__DomainObject_meta
  _gql_mutations: org_apache_causeway_commons_functional_ThrowingConsumer__DomainObject_mutators
}

type org_apache_causeway_commons_functional_ThrowingConsumer__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_ThrowingConsumer__DomainObject_mutators {
  andThen(arg0: _gql_input__java_util_function_Consumer!): java_util_function_Consumer
  throwing(exceptionWrapper: _gql_input__java_util_function_BiFunction!): org_apache_causeway_commons_functional_ThrowingConsumer
}

type org_apache_causeway_commons_functional_ThrowingFunction {
  _gql_meta: org_apache_causeway_commons_functional_ThrowingFunction__DomainObject_meta
  _gql_mutations: org_apache_causeway_commons_functional_ThrowingFunction__DomainObject_mutators
}

type org_apache_causeway_commons_functional_ThrowingFunction__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_ThrowingFunction__DomainObject_mutators {
  andThen(arg0: _gql_input__java_util_function_Function!): java_util_function_Function
  compose(arg0: _gql_input__java_util_function_Function!): java_util_function_Function
  throwing(exceptionWrapper: _gql_input__java_util_function_BiFunction!): org_apache_causeway_commons_functional_ThrowingFunction
}

type org_apache_causeway_commons_functional_ThrowingRunnable {
  _gql_meta: org_apache_causeway_commons_functional_ThrowingRunnable__DomainObject_meta
  _gql_mutations: org_apache_causeway_commons_functional_ThrowingRunnable__DomainObject_mutators
}

type org_apache_causeway_commons_functional_ThrowingRunnable__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_ThrowingRunnable__DomainObject_mutators {
  callUncatched: String
  run: String
  runUncatched: String
  toCallable: java_util_concurrent_Callable
  toRunnable: java_lang_Runnable
}

type org_apache_causeway_commons_functional_Try {
  _gql_meta: org_apache_causeway_commons_functional_Try__DomainObject_meta
  _gql_mutations: org_apache_causeway_commons_functional_Try__DomainObject_mutators
  failure: String!
  success: String!
}

type org_apache_causeway_commons_functional_Try__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_commons_functional_Try__DomainObject_mutators {
  accept(failureConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!, successConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!): org_apache_causeway_commons_functional_Try
  flatMapSuccess(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  flatMapSuccessAsNullable(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  flatMapSuccessWhenPresent(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  ifAbsentFail: org_apache_causeway_commons_functional_Try
  ifFailure(exceptionConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!): org_apache_causeway_commons_functional_Try
  ifFailureFail: org_apache_causeway_commons_functional_Try
  ifSuccess(valueConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!): org_apache_causeway_commons_functional_Try
  ifSuccessAsNullable(valueConsumer: _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer!): org_apache_causeway_commons_functional_Try
  mapEmptyToFailure: org_apache_causeway_commons_functional_Try
  mapFailure(failureMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  mapFailureToSuccess(recoveryMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  mapSuccess(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  mapSuccessAsNullable(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  mapSuccessWhenPresent(successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Try
  mapToEither(failureMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!, successMapper: _gql_input__org_apache_causeway_commons_functional_ThrowingFunction!): org_apache_causeway_commons_functional_Either
  orCall(fallback: _gql_input__java_util_concurrent_Callable!): org_apache_causeway_commons_functional_Try
  then(next: _gql_input__java_util_concurrent_Callable!): org_apache_causeway_commons_functional_Try
  thenCall(callable: _gql_input__java_util_concurrent_Callable!): org_apache_causeway_commons_functional_Try
  thenRun(runnable: _gql_input__org_apache_causeway_commons_functional_ThrowingRunnable!): org_apache_causeway_commons_functional_Try
}

type org_apache_causeway_core_metamodel_inspect_model_MMNode {
  _gql_meta: org_apache_causeway_core_metamodel_inspect_model_MMNode__DomainObject_meta
}

type org_apache_causeway_core_metamodel_inspect_model_MMNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_core_metamodel_inspect_model_MemberNode {
  _gql_meta: org_apache_causeway_core_metamodel_inspect_model_MemberNode__DomainObject_meta
  _gql_mutations: org_apache_causeway_core_metamodel_inspect_model_MemberNode__DomainObject_mutators
  mixedIn: String!
  parentNode: causeway_applib_TypeNode!
}

type org_apache_causeway_core_metamodel_inspect_model_MemberNode__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_core_metamodel_inspect_model_MemberNode__DomainObject_mutators {
  streamChildNodes: java_util_stream_Stream
}

type org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript {
  _gql_meta: org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript__DomainObject_meta
  friendlyName: String!
  qualifiedName: String!
}

type org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

type org_apache_causeway_viewer_graphql_viewer_test_domain_WithName {
  _gql_meta: org_apache_causeway_viewer_graphql_viewer_test_domain_WithName__DomainObject_meta
  name: String!
}

type org_apache_causeway_viewer_graphql_viewer_test_domain_WithName__DomainObject_meta {
  id: String!
  logicalTypeName: String!
}

input _gql_input__causeway_applib_DomainObjectList {
  id: ID!
}

input _gql_input__causeway_applib_FacetGroupNode {
  id: ID!
}

input _gql_input__causeway_applib_ParameterNode {
  id: ID!
}

input _gql_input__causeway_applib_PropertyNode {
  id: ID!
}

input _gql_input__causeway_applib_RoleMemento {
  id: ID!
}

input _gql_input__causeway_applib_TypeNode {
  id: ID!
}

input _gql_input__causeway_applib_UserMemento {
  id: ID!
}

input _gql_input__causeway_applib_node_ActionNode {
  id: ID!
}

input _gql_input__causeway_applib_node_CollectionNode {
  id: ID!
}

input _gql_input__causeway_applib_node_FacetAttrNode {
  id: ID!
}

input _gql_input__causeway_applib_node_FacetNode {
  id: ID!
}

input _gql_input__causeway_conf_ConfigurationProperty {
  id: ID!
}

input _gql_input__causeway_conf_ConfigurationViewmodel {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationFeatureViewModel {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationNamespace {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationType {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationTypeAction {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationTypeCollection {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationTypeMember {
  id: ID!
}

input _gql_input__causeway_feat_ApplicationTypeProperty {
  id: ID!
}

input _gql_input__causeway_schema_metamodel_v2_DomainClassDto {
  id: ID!
}

input _gql_input__causeway_security_LoginRedirect {
  id: ID!
}

input _gql_input__causeway_testing_fixtures_FixtureResult {
  id: ID!
}

input _gql_input__gql_test_domain_Department {
  id: ID!
}

input _gql_input__gql_test_domain_DeptHead {
  id: ID!
}

input _gql_input__java_lang_Runnable {
  id: ID!
}

input _gql_input__java_util_Map {
  id: ID!
}

input _gql_input__java_util_SortedMap {
  id: ID!
}

input _gql_input__java_util_concurrent_Callable {
  id: ID!
}

input _gql_input__java_util_function_BiFunction {
  id: ID!
}

input _gql_input__java_util_function_Consumer {
  id: ID!
}

input _gql_input__java_util_function_Function {
  id: ID!
}

input _gql_input__java_util_stream_Stream {
  id: ID!
}

input _gql_input__org_apache_causeway_commons_functional_Either {
  id: ID!
}

input _gql_input__org_apache_causeway_commons_functional_Railway {
  id: ID!
}

input _gql_input__org_apache_causeway_commons_functional_ThrowingConsumer {
  id: ID!
}

input _gql_input__org_apache_causeway_commons_functional_ThrowingFunction {
  id: ID!
}

input _gql_input__org_apache_causeway_commons_functional_ThrowingRunnable {
  id: ID!
}

input _gql_input__org_apache_causeway_commons_functional_Try {
  id: ID!
}

input _gql_input__org_apache_causeway_core_metamodel_inspect_model_MMNode {
  id: ID!
}

input _gql_input__org_apache_causeway_core_metamodel_inspect_model_MemberNode {
  id: ID!
}

input _gql_input__org_apache_causeway_testing_fixtures_applib_fixturescripts_FixtureScript {
  id: ID!
}

input _gql_input__org_apache_causeway_viewer_graphql_viewer_test_domain_WithName {
  id: ID!
}
